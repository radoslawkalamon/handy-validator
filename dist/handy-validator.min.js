"use strict";function _typeof(r){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}Object.defineProperty(exports,"__esModule",{value:!0});var txt={ARGUMENTS:{VALIDATOR:{IS_NOT_A_STRING:"ARGUMENTS_VALIDATOR_IS_NOT_A_STRING | [...]",IS_EMPTY:"ARGUMENTS_VALIDATOR_IS_EMPTY | [...]",ERROR:"ARGUMENTS_VALIDATOR_ERROR | [...]"}},VALIDATOR:{UNKNOWN:"VALIDATOR_UNKNOWN | %s | [...]"},STRING:{NO_APOSTROPHES:"STRING_NO_APOSTROPHES | [...]"},ISEQUALTO:{NO_VALUES_PASSED:"ISEQUALTO_NO_VALUES_PASSED | [...]"}},regExp={operators:{smallerThanOrEqual:"<=",smallerThan:"<",biggerThanOrEqual:">=",biggerThan:">",equalTo:"=",notEqualTo:"!="},numbers:{real:/-?\d+[,.]*\d*$/,infinity:/^-?Infinity$/,nan:/^-?NaN$/},misc:{comma:",",textInApostrophe:/'(.*?)'/g}};function createValidatorArray(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";if("string"!=typeof r)throw new Error(txt.ARGUMENTS.VALIDATOR.IS_NOT_A_STRING);var a="VALIDATOR_ESC_HANDY_VALIDATOR_",e=r.match(regExp.misc.textInApostrophe);if(null===e)return r.split("|");var t=r;e.forEach(function(r,e){t=t.replace(r,"".concat(a).concat(e))});var n=t.split("|");return e.forEach(function(e,t){n=n.map(function(r){return r.replace("".concat(a).concat(t),e)})}),n}var stripApostropheFromString=function(r){var e=0<arguments.length&&void 0!==r?r:"",t=e.length-1;if("'"===e[0]&&"'"===e[t])return e.slice(1,t);throw new Error(txt.STRING.NO_APOSTROPHES)};function validateArray(r,c){return-1===r.map(function(r,e){if(0===e)return Array.isArray(c);if(r[0]===regExp.operators.smallerThan){var t=r.slice(1),a=t.match(regExp.numbers.real);if(null!==a)return c.length<parseFloat(a[0]);var n=t.match(regExp.numbers.infinity);if(null!==n)return c.length<parseFloat(n[0])}if(r[0]===regExp.operators.biggerThan){var o=r.slice(1),l=o.match(regExp.numbers.real);if(null!==l)return c.length>parseFloat(l[0]);var i=o.match(regExp.numbers.infinity);if(null!==i)return c.length>parseFloat(i[0])}if(r[0]===regExp.operators.equalTo){var u=r.slice(1),s=u.match(regExp.numbers.real);if(null!==s)return c.length===parseFloat(s[0]);var p=u.match(regExp.numbers.infinity);if(null!==p)return c.length===parseFloat(p[0])}return console.warn(txt.VALIDATOR.UNKNOWN,r),!1}).indexOf(!1)}function validateBoolean(r,e){return"boolean"==typeof e}var prepareString=function(r,e){var t=r.slice(e);return stripApostropheFromString(t)};function validateIsEqualTo(r,a){var e=r.map(function(r,e){if(0===e)return!1;var t=prepareString(r);return a===t});return e.length<2&&console.warn(txt.ISEQUALTO.NO_VALUES_PASSED),2<=e.length&&-1!==e.indexOf(!0)}function validateNumber(r,T){return-1===r.map(function(r,e){if(0===e)return"number"==typeof T;if(r.slice(0,2)===regExp.operators.biggerThanOrEqual){var t=r.slice(2),a=t.match(regExp.numbers.real);if(null!==a)return T>=parseFloat(a[0]);var n=t.match(regExp.numbers.infinity);if(null!==n)return T>=parseFloat(n[0])}if(r.slice(0,2)===regExp.operators.smallerThanOrEqual){var o=r.slice(2),l=o.match(regExp.numbers.real);if(null!==l)return T<=parseFloat(l[0]);var i=o.match(regExp.numbers.infinity);if(null!==i)return T<=parseFloat(i[0])}if(r[0]===regExp.operators.smallerThan){var u=r.slice(1),s=u.match(regExp.numbers.real);if(null!==s)return T<parseFloat(s[0]);var p=u.match(regExp.numbers.infinity);if(null!==p)return T<parseFloat(p[0])}if(r[0]===regExp.operators.biggerThan){var c=r.slice(1),f=c.match(regExp.numbers.real);if(null!==f)return T>parseFloat(f[0]);var E=c.match(regExp.numbers.infinity);if(null!==E)return T>parseFloat(E[0])}if(r[0]===regExp.operators.equalTo){var g=r.slice(1),A=g.match(regExp.numbers.real);if(null!==A)return T===parseFloat(A[0]);var m=g.match(regExp.numbers.infinity);if(null!==m)return T===parseFloat(m[0])}return console.warn(txt.VALIDATOR.UNKNOWN,r),!1}).indexOf(!1)}function validateNull(r,e){return null===e&&"object"===_typeof(e)}function validateObject(r,e){return null!==e&&!Array.isArray(e)&&"object"===_typeof(e)}function validateString(r,n){return-1===r.map(function(r,e){if(0===e)return"string"==typeof n;if(r.slice(0,regExp.operators.notEqualTo.length)===regExp.operators.notEqualTo){var t=prepareString(r,regExp.operators.notEqualTo.length);return n!==t}if(r[0]!==regExp.operators.equalTo)return console.warn(txt.VALIDATOR.UNKNOWN,r),!1;var a=prepareString(r,regExp.operators.equalTo.length);return n===a}).indexOf(!1)}function validateUndefined(r,e){return void 0===e&&void 0===e}function handyValidator(r,e){var t=2<arguments.length&&void 0!==arguments[2]&&arguments[2],a=createValidatorArray(r);switch(a[0].toLowerCase()){case"string":return validateString(a,e);case"number":return validateNumber(a,e);case"array":return validateArray(a,e);case"object":return!0!==t&&validateObject(a,e);case"undefined":return validateUndefined(a,e);case"null":return validateNull(a,e);case"boolean":return validateBoolean(a,e);case"isequalto":return validateIsEqualTo(a,e);default:throw new Error(txt.ARGUMENTS.VALIDATOR.ERROR)}}function getIsEqualToValues(r){var e=createValidatorArray(r);switch(e[0].toLowerCase()){case"isequalto":return e.slice(1).map(stripApostropheFromString);default:throw new Error(txt.ARGUMENTS.VALIDATOR.ERROR)}}exports.default=handyValidator,exports.getIsEqualToValues=getIsEqualToValues;